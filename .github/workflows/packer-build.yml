name: Build Packer Image

on:
  push:
    branches: ["main"]

jobs:
  packer_image_build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_SCHEMA: public
      PORT: ${{ secrets.DB_PORT }}

    name: Run Packer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create .env file
        run: |
          echo "NODE_ENV=development" > .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD='${{ secrets.DB_PASSWORD }}'" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "PORT="${{ secrets.PORT }}" >> .env
          echo "DB_TABLE_NAME=${{ secrets.DB_TABLE_NAME }}" >> .env
          echo "DB_SCHEMA='${{ secrets.DB_SCHEMA }}'" >> .env

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Prepare application for Packer
        run: |
          mkdir -p artifacts
          cp -r src .env package.json package-lock.json artifacts/
          cd artifacts
          zip -r ../packer/webapp.zip .
          cd ..

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL...";
            sleep 5;
          done
        shell: bash

      - name: Run tests
        run: npm run test:github

      - name: Run `packer init`
        id: init
        run: |
          cd packer
          packer init .

      - name: Run Packer fmt
        run: |
          packer fmt -check -var aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID_CLI }} \
                          -var aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY_CLI }} \
                          -var aws_region=${{ secrets.AWS_REGION }} \
                          -var instance_type=${{ secrets.INSTANCE_TYPE }} \
                          packer/aws-ubuntu.pkr.hcl

      - name: Run Packer validate
        run: |
          packer validate -var aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID_CLI }} \
                          -var aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY_CLI }} \
                          -var aws_region=${{ secrets.AWS_REGION }} \
                          -var instance_type=${{ secrets.INSTANCE_TYPE }} \
                          packer/aws-ubuntu.pkr.hcl

      - name: Run Packer Build
        run: |
          packer build -var aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID_CLI }} \
                       -var aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY_CLI }} \
                       -var aws_region=${{ secrets.AWS_REGION }} \
                       -var instance_type=${{ secrets.INSTANCE_TYPE }} \
                       packer/aws-ubuntu.pkr.hcl
