name: CI-check

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - "A[0-9][0-9]/[0-9][0-9]"
jobs:
  setup:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Wait for PostgreSQL to be ready
        run: |
          until PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h localhost -U ${{ secrets.DB_USER }} -d ${{ secrets.DB_NAME }} -c '\q'; do
            echo "Waiting for PostgreSQL...";
            sleep 5;
          done
        shell: bash

      - name: Good to go!
        run: echo "Setup complete."

      - name: Install the dependencies
        run: |
          sudo apt update
          sudo apt install -y postgresql postgresql-contrib
          echo "Starting PostgreSQL service..."
          sudo systemctl start postgresql
          sudo -u postgres psql
          CREATE DATABASE ${{ secrets.DB_NAME }};
          create USER ${{ secrets.DB_USER }} WITH ENCRYPTED PASSWORD '${{ secrets.DB_PASSWORD }}';
          GRANT ALL PRIVILEGES ON DATABASE c${{ secrets.DB_NAME }} TO ${{ secrets.DB_USER }};

      - name: Run unit tests
        run: npm run test:github
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
